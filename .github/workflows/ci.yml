
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  collect_sdks:
    runs-on: ubuntu-latest
    outputs:
      sdks: ${{ steps.sdks.outputs.sdks }}
    steps:
      - uses: actions/checkout@v4
      - id: sdks
        run: echo "sdks=$(cd sdks && ls -d * | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}
  
  build:
    runs-on: ubuntu-latest
    needs: collect_sdks
    strategy:
      matrix:
        sdks: ${{ fromJson(needs.collect_sdks.outputs.sdks) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build SDK Docker Images
        uses: docker/build-push-action@v6
        with:
          context: sdks/${{ matrix.sdks }}
          push: false

  battle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Find and Replace host network
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "host"
          replace: "bridge"
          include: "docker-compose.yml"

      - name: Build Docker Compose Services
        run: docker compose build

      - name: Run Docker Compose
        run: docker compose --profile battle up battle-server

      - name: Tear Down Docker Compose
        if: always()
        run: docker compose down